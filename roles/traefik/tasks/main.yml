---
- name: Display traefik_hostname
  debug:
    var: traefik_hostname
    verbosity: 2
  when: traefik_hostname is defined

- name: Set fact traefik_hostname {{ inventory_hostname_short }}
  set_fact:
    traefik_hostname: "{{ node_hostname_short }}"
  when: traefik_hostname is not defined or traefik_hostname == ""

- name: Determine public ip
  shell:
    ip route get 8.8.8.8 | head -n1 | grep 'src [0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+' -o | awk '{print $2}'
  register: public_ip_result

- name: Register public ip fact
  set_fact:
    public_ip: "{{ public_ip_result.stdout }}"

- shell: "getent passwd '{{ traefik_username }}' | cut -d: -f1 | tr -d '\n'"
  register: unix_user_traefik

- name: Ensure group "{{ traefik_groupname }}" exists
  group:
    name: "{{ traefik_groupname }}"
    state: present
  when: unix_user_traefik.stdout == ""

- name: Add the user '{{ traefik_username }}' with a specific uid and a primary group of '{{ traefik_groupname }}'
  user:
    comment: Traefik Proxy
    name: "{{ traefik_username }}"
    group: "{{ traefik_groupname }}"
    shell: "/sbin/nologin"
    create_home: false
  when: unix_user_traefik.stdout == ""

- name: "Get latest available Traefik release"
  shell: "echo $(curl -H 'Authorization: {{ github_oauth_token }}' -L --silent https://api.github.com/repos/containous/traefik/releases | jq -r '.[].tag_name' | grep 'v2' | grep -v '\\-rc[0-9]*' | head -1)"
  register: traefik_version_output

- name: Set fact "traefik_version" to "{{ traefik_version_output.stdout }}"
  set_fact:
    traefik_version: "{{ traefik_version_output.stdout }}"

- name: "Ensure dirs"
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: traefik
  with_items:
    - /etc/traefik
    - /etc/traefik/acme
    - /etc/traefik/conf.d
    - /etc/traefik/static
    - /var/log/traefik
    - /usr/local/traefik

- name: "Downloading Traefik ({{ traefik_version }})"
  unarchive:
    src: "https://github.com/traefik/traefik/releases/download/{{ traefik_version }}/traefik_{{ traefik_version }}_linux_amd64.tar.gz"
    dest: "/usr/local/traefik"
    creates : "/usr/local/traefik/traefik"
    remote_src: True
    mode: 0755
    owner: root
    group: root

- name: "Ensure Traefik symlink"
  file:
    dest: "/usr/local/bin/traefik"
    src: "/usr/local/traefik/traefik"
    state: link
    force: yes

- name: "Creating /etc/traefik/conf.d/dashboard.toml"
  template:
    src: dashboard.toml.j2
    dest: /etc/traefik/static/dashboard.toml
    owner: root
    group: root

- name: "Ensure /etc/traefik/conf.d/dashboard.toml symlink"
  file:
    dest: "/etc/traefik/conf.d/dashboard.toml"
    src: "/etc/traefik/static/dashboard.toml"
    state: link
    force: yes

- name: "Creating /etc/traefik/static/code-server.toml"
  template:
    src: code-server.toml.j2
    dest: /etc/traefik/static/code-server.toml
    owner: root
    group: root

- name: "Remove /etc/traefik/conf.d/default.toml symlink"
  file:
    dest: "/etc/traefik/conf.d/default.toml"
    state: absent

- name: "Ensure /etc/traefik/conf.d/code-server.toml symlink"
  file:
    dest: "/etc/traefik/conf.d/code-server.toml"
    src: "/etc/traefik/static/code-server.toml"
    state: link
    force: yes

- name: "Creating /etc/traefik/static/public_{{ traefik_public_port }}.toml"
  template:
    src: public.toml.j2
    dest: /etc/traefik/static/public_{{ traefik_public_port }}.toml
    owner: root
    group: root
  when: traefik_public_port is defined and traefik_public_port != ""

- name: "Remove /etc/traefik/conf.d/public.toml symlink"
  file:
    dest: "/etc/traefik/conf.d/public.toml"
    state: absent
  when: traefik_public_port is defined and traefik_public_port != ""

- name: "Ensure /etc/traefik/conf.d/public.toml symlink"
  file:
    dest: "/etc/traefik/conf.d/public.toml"
    src: "/etc/traefik/static/public_{{ traefik_public_port }}.toml"
    state: link
    force: yes
  when: traefik_public_port is defined and traefik_public_port != ""

- name: "Creating /etc/traefik/traefik.toml"
  template:
    src: traefik.toml.j2
    dest: /etc/traefik/traefik.toml
    owner: root
    group: root

- name: "Creating /lib/systemd/system/traefik.service"
  template:
    src: systemd/traefik.service.j2
    dest: /lib/systemd/system/traefik.service
    owner: "{{ traefik_username }}"
    group: root
    mode: 0640

- name: "Enable traefik service"
  systemd:
    name: traefik
    state: restarted
    daemon_reload: yes
    enabled: yes
