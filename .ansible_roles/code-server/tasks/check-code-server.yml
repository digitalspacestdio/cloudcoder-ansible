- name: Check code-server binary exists
  stat:
    path: "{{ code_server_bin_dir }}/code-server"
    follow: yes
  register: code_server_exists

# This check is compatible with code-server v1, v2, v3 and v4
# v4.2.0:
# 4.2.0 693b1fac04524bb0e0cfbb93afc85702263329bb with Code 1.64.2
#
# v3.6.0:
# 3.6.0 a4a03c14922ccaec2a9ff8d1b7b2af8522a4214d
#
# v3.5.0:
# [2020-09-01T06:20:36.864Z] info  Using config file ~/.config/code-server/config.yaml
# 3.5.0 de41646fc402b968ca6d555fdf2da7de9554d28a
#
# v3.4.1:
# info  Using config file ~/.config/code-server/config.yaml
# 3.4.1 48f7c2724827e526eeaa6c2c151c520f48a61259
#
# v3.0.2:
# 3.0.2 e480f6527e11344a7c69b7cd024bce9379cea7f0
#
# v3:
# 3.0.0
#
# v2:
# info  2.1698-vsc1.41.1
# info  f51e045cd5483561afc07694f39307fb673b6d1d
# info  x64
#
# v1:
# 1.1156-vsc1.33.1
- name: Check installed code-server version
  shell: 'set -o pipefail; code-server --version | grep -P -o "(?<=^|info  )\d+(\.\d+)+(-[^ ]+)?"'
  args:
    executable: /bin/bash
  register: code_server_version
  when: code_server_exists.stat.exists
  changed_when: no

- name: Check latest code-server version (github_oauth_token not provided)
  uri:
    url: https://api.github.com/repos/cdr/code-server/releases
  register: code_server_releases
  delegate_to: localhost
  when: code_server_ver is undefined and github_oauth_token is undefined

- name: Check latest code-server version (github_oauth_token provided)
  uri:
    url: https://api.github.com/repos/cdr/code-server/releases
    headers:
      Authorization: github_oauth_token
  register: code_server_releases
  delegate_to: localhost
  when: code_server_ver is undefined and github_oauth_token is defined

- name: "Get latest stable code-server release"
  shell: "echo '{{ code_server_releases }}' | jq -r '.[].tag_name' | grep -v '\\-rc[0-9]*' | head -1"
  register: code_server_ver_output
  when: code_server_ver is undefined

- debug:
    var: code_server_ver_output.output
  when: code_server_ver is undefined

- name: Set code-server latest version
  set_fact:
    code_server_ver: "{{ code_server_ver_output.output }}"
  when: code_server_ver is undefined

- debug:
    var: code_server_ver

- set_fact:
    code_server_cleaned_ver: "{{ code_server_ver | regex_replace('^v([0-9]{1,}).([0-9]{1,}).([0-9]{1,})', '\\1.\\2.\\3') }}"

- debug:
    var: code_server_cleaned_ver

- set_fact:
    code_server_short_ver: "{{ code_server_cleaned_ver | regex_replace('-.+', '') }}"

- set_fact:
    code_server_major: "{{ code_server_cleaned_ver.split('.')[0] }}"

- set_fact:
    code_server_short_ver: "{{ code_server_cleaned_ver | regex_replace('-.+', '') }}"

- set_fact:
    code_server_download_needed: >-
      {{ not code_server_exists.stat.exists
      or code_server_version.stdout != code_server_cleaned_ver }}

- set_fact:
    code_server_download_dir: "{{ 'v' if code_server_cleaned_ver is version('3.3.0', '>=') else '' }}{{ code_server_cleaned_ver }}"
    
- set_fact:
    # The architecture of code-server as used in download URL
    code_server_arch: "{% if code_server_cleaned_ver is version('3.3.0', '>=') %}amd64{% elif code_server_major != '1' %}x86_64{% else %}x64{% endif %}"

- set_fact:
    # The build-up final .tar.gz url for code-server
    code_server_tar_url: "{{ code_server_url_prefix }}/{{ code_server_download_dir }}/code-server{{ '-' if code_server_major|int >= 3 else '' }}{{ code_server_cleaned_ver }}-linux-{{ code_server_arch }}.tar.gz"

- set_fact:
    # The data directory of code-server
    code_server_data_dir_abs: "{{ code_server_data_dir | expanduser }}"